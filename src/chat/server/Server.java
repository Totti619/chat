/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chat.server;

import chat.Message;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;

/**
 *
 * @author Master
 */
public class Server extends javax.swing.JFrame implements Runnable {

    Thread thread;
    ServerSocket serverSocket;
    Socket inputSocket, outputSocket;
    ObjectInputStream ois;
    ObjectOutputStream oos;
    Message message;
    
    private static final short SERVER_PORT = 6969;
    
    public Server() {
        initComponents();
        setVisible(true);
        thread = new Thread(this);
        thread.start();
    }

    @Override
    public void run() {
        try {
            serverSocket = new ServerSocket(SERVER_PORT);
            while(true) {
                inputSocket = serverSocket.accept();
                ois = new ObjectInputStream(inputSocket.getInputStream());
                message = (Message)ois.readObject();
                messagesTextArea.append("FROM: " + message.getOriginIp() + " TO: " + message.getDestinationIp() + ":" + message.getPort() + " NICK: " +message.getNick() + " MESSAGETEXT: " + message.getText() + "\n");
                outputSocket = new Socket(message.getDestinationIp(), message.getPort());
                oos = new ObjectOutputStream(outputSocket.getOutputStream());
                oos.writeObject(message);
                
            }
        } catch (IOException ex) {
            ex.printStackTrace();
            messagesTextArea.append(ex.getMessage() + "\n");
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
            messagesTextArea.append(ex.getMessage() + "\n");
        } catch (Exception ex) {
            ex.printStackTrace();
            messagesTextArea.append(ex.getMessage() + "\n");
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        messagesTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        messagesTextArea.setColumns(20);
        messagesTextArea.setRows(5);
        jScrollPane1.setViewportView(messagesTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea messagesTextArea;
    // End of variables declaration//GEN-END:variables
    
    public static void main(String[] args) throws UnknownHostException {
        new Server();
    }
}
